{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/item-list/item-add/item-add.component.ts","./src/app/item-list/item-add/item-add.component.html","./src/app/item-list/item-list.component.ts","./src/app/item-list/item-list.component.html","./src/app/item-list/misc/refrence.ts","./src/app/services/item-retrieval.service.ts","./src/app/workout/workout.component.html","./src/app/workout/workout.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ItemListComponent } from './item-list/item-list.component';\nimport{ WorkoutComponent } from './workout/workout.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/workout', pathMatch: 'full'},\n  {path: 'workout', component: WorkoutComponent},//UserEntry, child:login\n  {path: 'list/:item', component: ItemListComponent},\n  {path: '**', redirectTo: '/workout'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'gym-crud';\n}\n","<nav>\n  <ul>\n      <li><a routerLink= \"/workout\">Start of Workout</a></li>\n      <li><a routerLink= \"/list/exercises\">Exercise</a></li>\n      <li><a routerLink= \"list/movement-patterns\">Movement Patterns</a></li>\n      <li><a routerLink= \"list/workouts\">Workouts</a></li>\n  </ul>\n</nav>\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ItemListComponent } from './item-list/item-list.component';\nimport { ItemAddComponent } from './item-list/item-add/item-add.component';\nimport { WorkoutComponent } from './workout/workout.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ItemListComponent,\n    ItemAddComponent,\n    WorkoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ItemRetrievalService } from 'services/item-retrieval.service';\r\nimport { ITEM_REFRENCE, TITLE_REFRENCE} from '../misc/refrence';\r\n\r\nimport { Exercise } from 'services/models/exercise.model';\r\nimport { MovementPattern } from 'services/models/movement-pattern.model';\r\nimport { Workout } from 'services/models/workout.model';\r\n\r\nimport exercise_data from 'services/forms/exercise.form.json';\r\nimport wo_child_data from 'services/forms/workout-child.form.json';\r\nimport workout_data from 'services/forms/workout.form.json';\r\nimport { JSONFormControls, JSONFormData } from 'services/forms/forms.models'\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'item-add',\r\n  templateUrl: './item-add.component.html',\r\n  styleUrls: ['./item-add.component.sass']\r\n})\r\nexport class ItemAddComponent implements OnInit {\r\n\r\n  @Output() itemAdded = new EventEmitter<boolean>();\r\n\r\n  form_options: itemForm = {\r\n    'exercises': exercise_data,\r\n    'workout-children': wo_child_data,\r\n    'workouts': workout_data\r\n  }\r\n  form_data: JSONFormData;\r\n  myForm: FormGroup = new FormGroup({});\r\n  //nestedForms: FormArray = new FormArray([]);\r\n  nested_form_name = '';\r\n  nestedControls: JSONFormData;\r\n  //cause only one of each usally can just use the controls dict as ref\r\n  //but these onlyu refer to rules for one entry\r\n  //as we want mutiple entries need an array to keep track\r\n  //To start array just bascially is {name: FormArray[FormGroup]}\r\n\r\n  //FormGroups - Class to tie different Form Controls together into One Big Form\r\n  //FormBuilder - Service used to mak ebuilding Forms Easier\r\n\r\n  list: any[] = [];\r\n  child_list: any[] = [];\r\n  ITEM: any = '';\r\n\r\n  constructor(\r\n    private _Activatedroute: ActivatedRoute,\r\n    private _Itemreterieval: ItemRetrievalService,\r\n    private _fb: FormBuilder\r\n  ) { }\r\n\r\n  /*ON INIT*/\r\n  ngOnInit(): void {\r\n    //Getting the ITEM from the URL extension\r\n    this._Activatedroute.paramMap.subscribe((params) => {\r\n      var item_to_list = params.get(\"item\")\r\n      var ITEM = ITEM_REFRENCE[item_to_list || ''];\r\n      this.ITEM = ITEM;\r\n      \r\n      var dict : itemForm = Object.assign({}, exercise_data, wo_child_data, workout_data)\r\n      this.list = dict[ITEM];\r\n      this.form_data = this.form_options[ITEM]\r\n      console.log(\"form data: \")\r\n      console.log(this.form_data)\r\n      \r\n      this.myForm = this.createForm(this.form_options[ITEM]);\r\n      console.log(\"This isnt even my Final Form:\")\r\n      console.log(this.myForm);\r\n      this.myForm.valueChanges.subscribe(console.log)\r\n\r\n      this.createLists(ITEM);\r\n\r\n      console.log(\"This is my Final Form:\")\r\n      console.log(this.myForm);\r\n      console.log(\"Nested Form:\")\r\n      console.log(this.nestedForms)\r\n\r\n      /**\r\n       * Form Group has group of the controls + variation Form Array\r\n       *      Form Array has Array of Form Groups\r\n       *            These Form Groups each have the Form Control for each entry\r\n       * \r\n       * Form Group -> Form Array -> Form Group -> Form Control\r\n       * Movement Pattern -> Variations -> Single Level Variations -> Name, Exercise\r\n       * \r\n       */\r\n    })\r\n    //Valid, Invalid, Dirty, Pristine, Untouched, Pending\r\n  }\r\n  createLists(item: String) {\r\n    if (item == 'workouts') {\r\n      this._Itemreterieval.getAll('workout-children').subscribe(\r\n        data => this.child_list = data\r\n      )\r\n      return\r\n    }\r\n    if (item == 'workout-children') {\r\n      this._Itemreterieval.getAll('exercises').subscribe(\r\n        data => this.child_list = data\r\n      )\r\n      return\r\n    }\r\n  }\r\n\r\n  /* Form Logic */\r\n  createControl(control: JSONFormControls) {\r\n    //Form Control = Form Element\r\n    //console.log(this.form_data);\r\n\r\n    const validatorsToAdd = [];\r\n    console.log(control)\r\n    for (const [key, value] of Object.entries(control.validators)){\r\n      switch(key) {\r\n        case 'min':\r\n          validatorsToAdd.push(Validators.min(value));\r\n          break\r\n        case 'max':\r\n          validatorsToAdd.push(Validators.max(value));\r\n          break\r\n        case 'minLength':\r\n          validatorsToAdd.push(Validators.minLength(value));\r\n          break\r\n        case 'maxLength':\r\n          validatorsToAdd.push(Validators.maxLength(value));\r\n          break\r\n        case 'required':\r\n          if (value) validatorsToAdd.push(Validators.required);\r\n          break\r\n      }\r\n    }\r\n    var form: any\r\n    if (control.type == \"nested\" && control.nested) {\r\n      this.nestedControls = control.nested;\r\n\r\n      form = this._fb.array([this.createForm(control.nested)]);\r\n\r\n      this.nested_form_name = control.name;\r\n      //this.addNested(form, control.name)\r\n    } else {\r\n      form = this._fb.control(control.value, validatorsToAdd)\r\n    }\r\n    //Form Creation\r\n    return [\r\n      [control.name], \r\n      form\r\n    ]\r\n  }\r\n  createForm(controls: JSONFormData) {\r\n    var myForm = this._fb.group({})\r\n    for (const control of controls.controls) {\r\n      var item = this.createControl(control)\r\n      console.log(item)\r\n      myForm.addControl(item[0], item[1]);\r\n    }\r\n    return myForm;\r\n  }\r\n\r\n  isInput(type: string): boolean {\r\n    var options = [\r\n      'text', 'password', 'email', 'number'\r\n    ]\r\n    if (options.includes(type)) return true;\r\n    return false;\r\n  }\r\n  isHidden(type: string) {\r\n    if (type == \"hidden\") return true;\r\n    return false;\r\n  }\r\n  isSelect(type: string): boolean {\r\n    if (type == \"select\") return true;\r\n    return false;\r\n  }\r\n  isSelectMutiple(type: string) {\r\n    if (type == \"select-mutiple\") return true;\r\n    return false;\r\n  }\r\n  isRange(type: string): boolean {\r\n    if (type == \"range\") return true;\r\n    return false;\r\n  } \r\n  isNested(type: string): boolean {\r\n    if (type == \"nested\") return true;\r\n    return false;\r\n  }\r\n\r\n  onSubmit() {\r\n    //POST\r\n    var form = this.myForm.value;\r\n\r\n    console.log(\"Form\")\r\n    console.log(form)\r\n    console.log(this.ITEM)\r\n    this._Itemreterieval.add(form, this.ITEM)?.subscribe(\r\n      res => { \r\n        console.log(res);\r\n        if ('err' in res) console.log('Theres an error');\r\n        if ('msg' in res) {\r\n          console.log('Sucess');\r\n          this.itemAdded.emit(true);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  addNested() {\r\n    this.nestedForms.push(this.createForm(this.nestedControls))\r\n  }\r\n  delNested(index: number) {\r\n    this.nestedForms.removeAt(index);\r\n  }\r\n\r\n  get nestedForms() {\r\n    return this.myForm.get(this.nested_form_name) as FormArray\r\n  }\r\n\r\n  output(output: any) {\r\n    console.log(\"Outputting Function:\")\r\n    console.log(output)\r\n  }\r\n\r\n}\r\n\r\ninterface itemForm {\r\n  [id: string] : any\r\n}\r\n","<h1>Add [ITEM]</h1>\n<form [formGroup]=\"myForm\">\n    Value: {{myForm.value | json}}\n    <ul>\n        <!--form_data - data for forms-->\n        <!--myForm - the actual form-->\n        <li *ngFor=\"let control of form_data?.controls\">\n            <label> {{control.label}} |{{control.name}}| </label>\n            <label *ngIf=\"isRange(control.type) \"> ({{myForm.get(control.name)?.value}}) </label>\n            <!--Other Input-->\n            <input *ngIf=\"isInput(control.type)\"\n            [name]=\"control.name\"\n            [type]=\"control.type\"\n            [formControlName]=\"control.name\"\n            [value]=\"control.value\"\n            />\n            <!--Range-->\n            <input *ngIf=\"isRange(control.type)\"\n            [name]=\"control.name\"\n            type=\"range\"\n            [formControlName]=\"control.name\"\n            [value]=\"control.value\"\n            [min]=\"control.validators.min\"\n            [max]=\"control.validators.max\"\n            />\n            <!--Select-->\n            <select *ngIf=\"isSelect(control.type)\"\n            [formControlName]=\"control.name\"\n            >\n                <option *ngFor=\"let item of child_list\" [value]=\"item._id\">{{item.name}}</option>\n            </select>\n\n            <!--Select Mutiple-->\n            <select *ngIf=\"isSelectMutiple(control.type)\"\n            [formControlName]=\"control.name\"\n            multiple\n            >\n                <option *ngFor=\"let item of child_list\" [value]=\"item._id\">{{item.name}}</option>\n            </select>\n            \n            <!--Nested (for Exercises in Movement Pattern)-->\n            <!-- Nested (for Movement Pattern in Workout) -->\n            <div \n            class=\"nested\"\n            *ngIf=\"isNested(control.type)\"\n            [formArrayName]=\"control.name\"\n            >   \n                Value: {{myForm.value[control.name] | json}}\n                <!-- control.nested is the criteria-->\n                <!-- Loop through the array of FormGroups*****************-->\n                <!--<li class=\"nested-entry\" *ngFor=\"let form of nestedForms[0][control.name].controls\" [formGroupName]=\"form\">-->\n                \n                \n                <li class=\"nested-entry\" *ngFor=\"let nestedForm of nestedForms.controls; let i = index\" [formGroupName]=\"i\">\n                    <!--[{map-key: map-value}, ...]-->\n                    <!-- nestedForm - Every replicated Form Group for varations-->\n                    <div class=\"nested-element\" *ngFor=\"let nestedControl of control!.nested?.controls\">\n                        <!--[map-key, map-value]-->\n                        <!--nested_controls - Each Form control-->\n                        \n                        <!-- Labels -->\n                        <label *ngIf=\"!isHidden(nestedControl.type)\"> {{nestedControl.label}} |{{nestedControl.name}}| </label>\n\n                        <!--Map Key Text Entry-->\n                        <input *ngIf=\"isInput(nestedControl.type)\"\n                        [name]=\"nestedControl.name\"\n                        [formControlName]=\"nestedControl.name\"\n                        [type]=\"nestedControl.type\"\n                        [value]=\"nestedControl.value\"\n                        class=\"nested-element\"\n                        />\n\n                        <input *ngIf=\"isHidden(nestedControl.type)\"\n                        [name]=\"nestedControl.name\"\n                        [formControlName]=\"nestedControl.name\"\n                        [type]=\"nestedControl.type\"\n                        />\n\n                        <!--Map Value Select Entry-->\n                        <select *ngIf=\"isSelect(nestedControl.type)\"\n                        [formControlName]=\"nestedControl.name\"\n                        class=\"nested-element\"\n                        >\n                            <option *ngFor=\"let item of child_list\" [value]=\"item._id\">{{item.name}}</option>\n                        </select>\n\n                    </div>\n                    <!--Delete One of the nested form groups-->\n                    <button class=\"nested-element\" (click)=\"delNested(i)\">Delete</button>\n                </li>\n                <!--Add a nested form group-->\n                <li class=\"nested-entry\"><button (click)=\"addNested()\" >Add {{control.label}}</button></li>\n            </div>\n        </li>\n        <li><button (click)=\"onSubmit()\" [disabled]=\"myForm.invalid\">Submit</button></li>\n    </ul>\n</form>","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { from } from 'rxjs';\nimport { ItemRetrievalService } from 'services/item-retrieval.service';\n\nimport { Exercise } from '../services/models/exercise.model';\nimport { MovementPattern } from '../services/models/movement-pattern.model';\nimport { Workout } from '../services/models/workout.model';\n\nimport { ITEM_REFRENCE, TITLE_REFRENCE} from './misc/refrence';\n\n\n@Component({\n  selector: 'item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.sass']\n})\nexport class ItemListComponent implements OnInit {\n\n  constructor(\n    private _Activatedroute: ActivatedRoute,\n    private _Itemreterieval: ItemRetrievalService\n  ) { }\n\n  add_item: boolean = false;\n  TITLE_REF = TITLE_REFRENCE;\n  ITEM = '';\n  list: any[] = [];\n\n\n  onClick() {\n    console.log(this.list)\n    switch(this.add_item){\n      case false:\n        this.add_item = true;\n        break\n      case true:\n        this.add_item = false\n        break\n    }\n  }\n\n  ngOnInit(): void {\n    /*\n    Workout\n    Movement Pattern (Workout Child)\n    Exercise\n    */ \n    var list;\n    this._Activatedroute.paramMap.subscribe((params) => {\n      this.ITEM = params.get(\"item\") || '';\n      this.internalOnInit();\n    })\n  }\n\n  internalOnInit(): void {\n    this.add_item = false;\n    var ITEM = ITEM_REFRENCE[this.ITEM];\n    this.list = [{name: 'Loading...'}]\n    if (ITEM) {\n      this._Itemreterieval.getAll(ITEM).subscribe(\n        data => this.list = data\n      )\n      return;\n    }\n    this.list = [];\n  }\n\n  itemAdded(event: any) {\n    if (event) this.internalOnInit();\n  }\n\n}\n","<h1>List {{TITLE_REF[ITEM]}}</h1>\n<!--Dynamic: dependibg on list-->\n\n<ul >\n    <li *ngFor=\"let item of list\"><span>{{item.name}}</span></li>\n    <li id=\"add_item\" (click)=\"onClick()\" *ngIf=\"!add_item && TITLE_REF[ITEM]\"><span class=\"sm-chr\">+</span>Add</li>\n</ul>\n\n<item-add *ngIf=\"add_item\" (itemAdded) = \"itemAdded($event)\"></item-add>","\r\ninterface refrence {\r\n    [id: string]: string\r\n}\r\n\r\nvar TITLE_REFRENCE: refrence = {\r\n    'exercises': 'Exercise',\r\n    'movement-patterns': 'Movement Pattern',\r\n    'workouts': 'Workout'\r\n}\r\nvar ITEM_REFRENCE: refrence = {\r\n    'exercises': 'exercises',\r\n    'movement-patterns': 'workout-children',\r\n    'workouts': 'workouts'\r\n  }\r\n\r\nexport { TITLE_REFRENCE, ITEM_REFRENCE };","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { Exercise } from '../services/models/exercise.model';\nimport { MovementPattern } from './models/movement-pattern.model';\nimport { Workout, Workout1 } from '../services/models/workout.model';\nimport { WorkoutEntry } from './models/workout-entry.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemRetrievalService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private _apiURL = '/api/'\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n    })\n  };\n\n  /*        GET        */\n  get(id: String, item: String, version = 0) {\n    switch (item) {\n      case 'exercise':\n        return this.getExercise(id);\n      case 'workout-section':\n        return this.getMovementPattern(id, version);\n      case 'workout':\n        return this.getWorkout(id, version);\n    }\n    return null\n    /*\n    var url = this._apiURL + item\n    return this.http.get(url).pipe(\n      tap(_ => console.log(\"Fetched all \" + item)),\n      catchError(this.errorHandler(`get ${item} | id=${id}`))\n    )\n    */\n   \n  }\n  getWorkout(id: String, version: number) :Observable<any> {\n    var ext = '';\n    if (version > 0 && version < 3) ext = '/' +version;\n    var url = this._apiURL + 'workout/' + id + ext;\n    console.log(url)\n    return this.http.get<Workout>(url).pipe(\n      tap(_ => console.log(\"Fetched single  Workouts\")),\n      catchError(this.errorHandler<Workout>(`get single workout | id=${id}`))\n    )\n  }\n  getMovementPattern(id: String, version: number) :Observable<MovementPattern> {\n    var ext = '';\n    if (version > 0 && version < 2) ext = '/' +version;\n    var url = this._apiURL + 'workout-child/' + id + ext;\n    return this.http.get<MovementPattern>(url).pipe(\n      tap(_ => console.log(\"Fetched single Workout Child\")),\n      catchError(this.errorHandler<MovementPattern>(`get single workout child | id=${id}`))\n    )\n  }\n  getExercise(id: String) :Observable<Exercise> {\n    var url = this._apiURL + 'exercise/' + id;\n    return this.http.get<Exercise>(url).pipe(\n      tap(_ => console.log(\"Fetched single Exercise\")),\n      catchError(this.errorHandler<Exercise>(`get single exercise | id=${id}`))\n    )\n  }\n\n  /*        GET all        */\n  getAll(item: String) :Observable<Workout[] | MovementPattern[] | Exercise[]> {\n    console.log('getAll()')\n    console.log(item);\n    switch (item) {\n      case 'exercises':\n        return this.getAllExercise();\n      case 'workout-children':\n        return this.getAllMovementPattern();\n      case 'workouts':\n        return this.getAllWorkout();\n    }\n    return this.getAllExercise();//QUICK BAD FIX\n    /*\n    var url = this._apiURL + item\n    return this.http.get(url).pipe(\n      tap(_ => console.log(\"Fetched all \" + item)),\n      catchError(this.errorHandler(`get all ${item}`))\n    )\n    */\n  }\n  getAllWorkout() :Observable<Workout[]> {\n    var url = this._apiURL + 'workouts';\n    return this.http.get<Workout[]>(url).pipe(\n      tap(_ => console.log(\"Fetched all Workouts\")),\n      catchError(this.errorHandler<Workout[]>(`get all workout`))\n    )\n  }\n  getAllMovementPattern() :Observable<MovementPattern[]> {\n    var url = this._apiURL + 'workout-children';\n    return this.http.get<MovementPattern[]>(url).pipe(\n      tap(_ => console.log(\"Fetched all Movement Patterns\")),\n      catchError(this.errorHandler<MovementPattern[]>(`get all movement patterns`))\n    )\n  }\n  getAllExercise() :Observable<Exercise[]> {\n    var url = this._apiURL + 'exercises';\n    return this.http.get<Exercise[]>(url).pipe(\n      tap(_ => console.log(\"Fetched all Exercise\")),\n      catchError(this.errorHandler<Exercise[]>(`get all exercise`))\n    )\n  }\n\n\n  add(formData: FormData, item: String, version = 0) {\n    switch (item) {\n      case 'exercises':\n        return this.addExercise(formData);\n      case 'workout-children':\n        return this.addMovementPattern(formData);\n      case 'workouts':\n        return this.addWorkout(formData);\n    }\n    return null\n  }\n  addWorkout(formData: FormData) {\n    var url = this._apiURL + 'workout';\n    return this.http.post(url, formData).pipe(\n      tap(_ => console.log(\"Sent of Workout\")),\n      catchError(this.errorHandler<Workout[]>(`POST a workout`))\n    )\n  }\n  addMovementPattern(formData: FormData) {\n    var url = this._apiURL + 'workout-child';\n    return this.http.post(url, formData).pipe(\n      tap(_ => console.log(\"Sent of Movement Pattern\")),\n      catchError(this.errorHandler<Workout[]>(`POST a movement pattern`))\n    )\n  }\n  addExercise(formData: FormData) {\n    var url = this._apiURL + 'exercise';\n    return this.http.post(url, formData, this.httpOptions).pipe(\n      tap(_ => console.log(\"Sent of Exercise\")),\n      catchError(this.errorHandler<Workout[]>(`POST a exercise`))\n    )\n  }\n  addWorkoutEntry(data: WorkoutEntry) {\n    var url = this._apiURL + 'workout-diary';\n    return this.http.post(url, data).pipe(\n      tap(_ => console.log(\"Sent of Workout Entry\")),\n      catchError(this.errorHandler<Workout[]>(`POST a workout entry`))\n    )\n  }\n\n  \n  /**\n  * Handle Http operation that failed.\n  * Let the app continue.\n  * @param operation - name of the operation that failed\n  * @param result - optional value to return as the observable result\n  */\n   errorHandler<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      //this.log(`${operation} failed: ${error.message}`);\n      //Message Servic????\n      return of(result as T);\n    };\n  }\n\n}\n","<!--Pick a Option & Save as a Cookie-->\n<!--\n    To make things easier just do URLs\n    Then save specfic thing in backend\n-->\n\n<div class=\"navbar\" *ngIf=\"!workoutDone\">\n    <h1>Workout:</h1>\n    <div class=\"dropdown\">\n        <button class=\"dropbtn\">\n            <h1 id=\"picked_workout\">{{TITLE}}</h1>\n        </button>\n        <div *ngIf=\"canChangeWorkout\" class=\"dropdown-content\">\n            <div class=\"links\" *ngFor=\"let item of workout_list\" (click)=\"setWorkout(item)\">{{item.name}}</div>\n        </div>\n    </div>\n</div>\n\n<hr>\n\n<!--Dynamic: [ITEM] depends on workout-->\n<nav *ngIf=\"current_workout?.sections && !workoutDone\">\n    <!-- IF current workout has movement patterns too it-->\n\n    <ul class=\"children-list\">\n        <div *ngFor=\"let item of current_workout!.sections\">\n            <!-- FOR Loop through Movement Pattern in Workout Plan-->\n            <li (click)=\"setMovementPattern(item)\"\n            *ngIf=\"showMovementPatternDone(item)\"\n            >\n                <span>{{item.name}}</span>\n                <ul \n                    *ngIf=\"current_movement_pattern==item\"\n                    class=\"exercise-list\"\n                >\n                    {{output(item)}}\n                    <!-- FOR Loop through Exercises(Level, Exercise) in Movement Pattern-->\n                    <li *ngFor=\"let jtem of item!.variations\" >\n                        \n                        <!--[string, Exercise]-->\n                        {{output(jtem)}}\n                        <span (click)=\"setExercise(jtem.value)\">{{jtem.key}}</span>\n                    \n                    </li>\n\n                </ul>\n            </li>\n        </div>\n    </ul>\n</nav>\n\n<hr>\n\n<!--        Exercise Widget        -->\n<div *ngIf=\"current_exercise && !workoutDone\">\n    <ul>\n        <!--Dynamic: X chnages with reps-->\n    <h3>{{current_exercise!.name}}</h3>\n    <h1><span id=\"progress-field\">{{progress}}</span><span>/</span><span>70</span></h1>\n    <!--\n    Entered reps on press of button is summed into X\n        X for easch saved in session via JS\n-->\n        <form (submit)=\"onSetDone($event)\">\n            <ul>\n                <li>\n                    <input type=\"number\" min=\"0\" max=\"125\" name=\"prog\">\n                    <input type=\"submit\" value=\"Set Done\">\n                </li>\n            </ul>\n        </form>\n        <li><button id=\"mv-btn\" (click)=\"onMovementPatternDone()\" [disabled] = \"!setDone\">Movement Pattern Done</button></li>\n    </ul>\n</div>\n\n<br>\n\n<div *ngIf=\"current_workout\">\n    <textarea rows=\"4\" cols=\"50\" placeholder=\"Notes\"></textarea>\n</div>\n<div *ngIf=\"workoutDone\">\n    <h1>WORKOUT DONEZO</h1>\n    <p>{{workout | json}}</p>\n    <button (click) = \"onDone()\">Submit Workout</button>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ItemRetrievalService } from 'services/item-retrieval.service';\nimport { Workout, Workout1 } from 'services/models/workout.model';\nimport { MovementPattern, MovementPattern1 } from 'services/models/movement-pattern.model'\nimport { WorkoutEntry, doneMovementPattern, doneSet } from 'services/models/workout-entry.model';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { Exercise } from 'services/models/exercise.model';\n\n@Component({\n  selector: 'app-workout',\n  templateUrl: './workout.component.html',\n  styleUrls: ['./workout.component.sass']\n})\nexport class WorkoutComponent implements OnInit {\n\n  constructor(\n    private _Itemreterieval: ItemRetrievalService\n  ) { }\n\n  //workout = (workout_plan: workout plan id, completed_sections: [movement pattern])\n  //movement_pattern = (workout_section: movement pattern id, completed_sets: [set])\n  //set = (exercise: exercise id, set index: set index, reps: no. of reps in set)\n  workout: WorkoutEntry;\n  movement_patterns: doneMovementPattern[] = [];\n  sets: doneSet[] = [];\n\n  workout_list: Workout[] = [];\n  TITLE = 'Options';\n\n  canChangeChild: boolean = false;\n  canChangeWorkout: boolean = false;\n  setDone: boolean = false;\n  workoutDone: boolean = false;\n\n  _setCounter: number = 0;\n  _repCounter: number = 0;\n\n  current_workout: Workout1 | null = null;\n  current_movement_pattern: MovementPattern1 | null = null;\n  current_exercise: Exercise | null = null;\n  \n  _workout: WorkoutEntry;\n  _min_prog: number = 50;//dont want a defualt value\n  number_input: FormControl;\n\n  ngOnInit(): void {\n    this._Itemreterieval.getAllWorkout().subscribe(\n      data => {\n        //Recursivley go through Workout Plans\n        this.workout_list = data\n        this.canChangeWorkout = true;\n      }\n    )\n  }\n\n  showMovementPatternDone(movement_pattern: MovementPattern1): boolean {\n    /* Check whether a Movement Pattern is done */\n    for (var i = 0; i < this.movement_patterns.length; i++) {\n      //Not ideal as works of assumputions no movement patterns reapeat\n      if (this.movement_patterns[i].workout_section===movement_pattern._id) return false\n    }\n\n    if (this.current_workout && this.canChangeChild) return true;\n    if (this.current_movement_pattern==movement_pattern) return true;\n\n    //movementPattern is done\n    return false;\n  }\n\n  /*          On [SET, MOVEMENT PATTERN, WORKOUT] done        */\n  onSetDone(event: any) {\n    //set = (exercise: exercise id, set index: set index, reps: no. of reps in set)\n    var reps = event.target.prog.value;\n    if (!reps || reps < 1) return;//later will add some error thingy\n\n    var set: doneSet = {\n      exercise: this.current_exercise!._id,\n      set_index: this._setCounter,\n      reps: reps\n    }\n    this.sets.push(set);\n    console.log(\"SET DONE\")\n\n    var prog = event.target.prog.value;\n    this._repCounter += +prog\n    event.target.prog.value = '';\n    if (this._repCounter > this._min_prog - 1) this.setDone = true;\n  }\n  onMovementPatternDone() {\n    //movement_pattern = (workout_section: movement pattern id, completed_sets: [set])\n    var movement_pattern: doneMovementPattern = {\n      workout_section: this.current_movement_pattern!._id,\n      completed_sets: this.sets\n      //is sets[] being global good?\n    }\n    this.movement_patterns.push(movement_pattern);\n    console.log(\"MOVEMENT PATTERN DONE\");\n\n    console.log(\"this.movement_patterns.length: \" +this.movement_patterns.length)\n    console.log(\"this.current_workout?.sections.length: \" +this.current_workout?.sections.length)\n    if (this.movement_patterns.length == this.current_workout?.sections.length) this.onWorkoutDone()\n    this.current_exercise = null;\n\n    this.newMovementPattern();\n  }\n  onWorkoutDone() {\n    //workout = (workout_plan: workout plan id, completed_sections: [movement pattern])#\n    var workout: WorkoutEntry = {\n      workout_plan: this.current_workout?._id || '',\n      completed: this.movement_patterns,\n      notes: ''\n      //is movement_patterns[] being global good?\n    }\n    this.workout = workout;\n    this.workoutDone = true;\n    console.log(\"WORKOUT DONE\")\n    \n  }\n  onDone() {\n    /* POST workout to as Workout entry */\n    if (!this.workout) return\n    this._Itemreterieval.addWorkoutEntry(this.workout).subscribe(\n      data=> console.log(\"res: \" + data)\n    );\n\n  }\n\n  /*        Starting a new [WORKOUT, SET]        */\n  newWorkout() {\n    /* Starting Movement Patterns afresh */\n    this.movement_patterns = [];\n  }\n  newMovementPattern() {\n    this.canChangeChild = true\n\n    /* Starting sets afresh */\n    this._setCounter = 0;\n    this._repCounter = 0;\n    this.setDone = false;\n    this.sets = []\n  }\n\n  /*        Choosing a new [EXERCISE, MOVEMENT PATTERN, WORKOUT]        */\n  setExercise(exercise: Exercise) { \n    this.current_exercise = exercise;//Sets the current exercise globally\n\n    /*\n    *Once an Exercise for a Movement Pattern is choosen,\n    *that movement pattern is locked in\n    */\n    this.canChangeChild = false;\n  }\n  setMovementPattern(item: MovementPattern1) {\n    if (this.canChangeChild) {\n\n      if (this.current_movement_pattern == item) {\n        this.current_movement_pattern = null;\n        return\n      } \n\n      this.current_movement_pattern = item;\n    }\n  }\n  setWorkout(item: Workout) {\n    this.newMovementPattern()/* new Movement Pattern to be picked */\n    this.TITLE = item.name;/* Set title */\n    this.canChangeWorkout = false;/* Can no longer change Workout */\n    this._Itemreterieval.getWorkout(item._id, 2).subscribe(\n      data => {\n        /* Retreieve Workout Plan Data */\n        this.current_workout = data \n        console.log(this.current_workout)\n      }\n    )\n  }\n\n  /*        GETTERS & SETTERS        */\n  getDict(item: any) {\n    var key = Object.keys(item)[0];\n    var value = item[key];\n    return [key, value]\n  }\n  get progress() {\n    return this._repCounter;\n  }\n\n  output(item: any) {\n    console.log(\"Output Function: \")\n    console.log(item)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}